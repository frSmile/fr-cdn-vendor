for(var usaepay,__assign=this&&this.__assign||Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},host="https://www.usaepay.com",scripts=document.getElementsByTagName("script"),x=0;x<scripts.length;x++){var src=scripts[x].src;if(src&&src.match(/js\/v\d*\/pay.js/)){host=src.split("/js/")[0];break}}!function(usaepay){var Client=function(){function Client(pubKey){this.pubKey=pubKey,this.publicKey=pubKey}return Client.prototype.createPaymentCardEntry=function(){return new PaymentCard(this)},Client.prototype.createApplePayEntry=function(applePayConfig){return new ApplePay(this,applePayConfig)},Client.prototype.getPaymentKey=function(paymentMethod){return paymentMethod.getPaymentKey()},Client}();usaepay.Client=Client;var PaymentCard=function(){function PaymentCard(_client){this.paymentKey="",this.payCardHTML="",this.payCardStyles=" body { margin: 0; overflow: hidden; } ",this.payCardSettings="",this.client=_client}return PaymentCard.prototype.generateHTML=function(styles,settings){var _this=this;styles&&Object.keys(styles).forEach(function(className){_this.generateStyleClass(className,styles[className])}),settings&&(this.payCardSettings=JSON.stringify(settings));var htmlString='<iframe id="paymentCardIFrame" src="'+(host+"/js/v1/card.html#"+this.client.publicKey)+'" width="100%" height="100%" frameborder="0"></iframe>';this.payCardHTML=htmlString},PaymentCard.prototype.generateStyleClass=function(className,stylesObj){var _this=this,styleClass="";styleClass+=".payjs-"+className+" { ",Object.keys(stylesObj).forEach(function(styleName){styleName.startsWith(":")?_this.generateStyleClass(className+styleName,stylesObj[styleName]):styleClass+=_this.camelToDash(styleName)+": "+stylesObj[styleName]+"; "}),styleClass+=" } ",this.payCardStyles+=styleClass},PaymentCard.prototype.camelToDash=function(str){return str.replace(/([A-Z])/g,function($1){return"-"+$1.toLowerCase()})},PaymentCard.prototype.addHTML=function(divId){var _this=this,payContainer=document.getElementById(divId);payContainer?payContainer.innerHTML=this.payCardHTML:console.error("could not find "+divId),this.addEventListener("ready",function(){var contentWin=document.getElementById("paymentCardIFrame").contentWindow;0<_this.payCardSettings.length&&contentWin.postMessage("addSettings::"+_this.payCardSettings,"*"),0<_this.payCardStyles.length&&contentWin.postMessage("addStyles::"+_this.payCardStyles,"*")})},PaymentCard.prototype.addEventListener=function(eventType,response){window.addEventListener("message",function(event){if(("string"==typeof event.data||event.data instanceof String)&&-1!==event.data.indexOf("::")){var msg=event.data.split("::");msg[0]===eventType&&response(msg[1])}})},PaymentCard.prototype.getPaymentKey=function(){var _this=this;return new Promise(function(resolve,reject){document.getElementById("paymentCardIFrame").contentWindow.postMessage("generateToken::true","*"),_this.addEventListener("paymentKey",function(paymentKey){resolve(paymentKey)}),_this.addEventListener("error",function(errorMsg){0<errorMsg.length&&reject(errorMsg)})})},PaymentCard}(),ApplePay=function(){function ApplePay(_client,applePayConfig){this.callbacks={},this.client=_client,this.applePayPaymentRequest=__assign({},applePayConfig.paymentRequest,{merchantCapabilities:[],supportedNetworks:[]}),this.applePayConfig=applePayConfig,this.addSpinner(applePayConfig.targetDiv)}return ApplePay.prototype.checkCompatibility=function(){var _this=this;return new Promise(function(resolve,reject){window.ApplePaySession?window.ApplePaySession.canMakePayments?_this.checkPermissions(resolve,reject):reject("Apple Pay is not set up by the user."):reject("Apple Pay is not available from this browser")})},ApplePay.prototype.addSpinner=function(targetDiv){var payContainer=document.getElementById(targetDiv);if(payContainer){var head=document.getElementsByTagName("head")[0],meta=document.getElementsByTagName("meta")[0],style=document.createElement("style");style.innerHTML=".apple-pay-button {\n                        box-sizing: border-box;\n                        width: 100%;\n                        height: 100%;\n                        margin: 0;\n                        padding: 0;\n                    }\n\n                    #payjs-applePayError {\n                        width: 100%;\n                        text-align: right;\n                        color: red;\n                        font-size: 10px; \n                    }\n\n                    #paybox-spinnerContainer {\n                        position: relative;\n                        height: 100%;\n                        width: 100%;\n                    }\n\n                    #paybox-spinner {\n                        animation: rotate 2s linear infinite;\n                        z-index: 2;\n                        position: absolute;\n                        top: 50%;\n                        left: 50%;\n                        margin: -25px 0 0 -25px;\n                        width: 50px;\n                        height: 50px;\n                    }\n\n                    #paybox-spinnerPath {\n                        stroke: #000000;\n                        stroke-linecap: round;\n                        animation: dash 1.5s ease-in-out infinite;\n                    }\n\n                    @keyframes rotate {\n                    100% {\n                        transform: rotate(360deg);\n                    }\n                    }\n\n                    @keyframes dash {\n                    0% {\n                        stroke-dasharray: 1, 150;\n                        stroke-dashoffset: 0;\n                    }\n                    50% {\n                        stroke-dasharray: 90, 150;\n                        stroke-dashoffset: -35;\n                    }\n                    100% {\n                        stroke-dasharray: 90, 150;\n                        stroke-dashoffset: -124;\n                    }\n                    }\n                    \n                    @supports (-webkit-appearance: -apple-pay-button) { \n                        .apple-pay-button {\n                            display: inline-block;\n                            -webkit-appearance: -apple-pay-button;\n                        }\n                        .apple-pay-button-black {\n                            -apple-pay-button-style: black;\n                        }\n                        .apple-pay-button-white {\n                            -apple-pay-button-style: white;\n                        }\n                        .apple-pay-button-white-with-line {\n                            -apple-pay-button-style: white-outline;\n                        }\n                    }\n\n                    @supports not (-webkit-appearance: -apple-pay-button) {\n                        .apple-pay-button {\n                            display: inline-block;\n                            background-size: 100% 60%;\n                            background-repeat: no-repeat;\n                            background-position: 50% 50%;\n                            border-radius: 5px;\n                            padding: 0px;\n                            box-sizing: border-box;\n                            min-width: 200px;\n                            min-height: 32px;\n                            max-height: 64px;\n                        }\n                        .apple-pay-button-black {\n                            background-image: -webkit-named-image(apple-pay-logo-white);\n                            background-color: black;\n                        }\n                        .apple-pay-button-white {\n                            background-image: -webkit-named-image(apple-pay-logo-black);\n                            background-color: white;\n                        }\n                        .apple-pay-button-white-with-line {\n                            background-image: -webkit-named-image(apple-pay-logo-black);\n                            background-color: white;\n                            border: .5px solid black;\n                        } \n                    }",head.insertBefore(style,meta),payContainer.innerHTML='<div id="paybox-spinnerContainer">\n                        <svg id="paybox-spinner" viewBox="0 0 50 50">\n                            <circle id="paybox-spinnerPath" cx="25" cy="25" r="20" fill="none" stroke-width="5"></circle>\n                        </svg>\n                    </div>'}else console.error("Could not find "+targetDiv)},ApplePay.prototype.checkPermissions=function(resolve,reject){var _this=this,payContainer=document.getElementById(this.applePayConfig.targetDiv);if(payContainer){var relayIFrame=document.createElement("iframe");relayIFrame.id="payjs-applePayRelay",relayIFrame.src=host+"/js/v1/relay.html#"+this.client.publicKey,relayIFrame.width="0",relayIFrame.height="0",relayIFrame.frameBorder="0",relayIFrame.style.display="none",payContainer.appendChild(relayIFrame)}else console.error("Could not find "+this.applePayConfig.targetDiv);window.addEventListener("message",function(event){if(event.data.includes("::")){var msg=event.data.split("::"),res=JSON.parse(msg[1]),applePaySession=void 0;if(res.error)switch(console.error("ERROR: ",res.error),_this.displayError(msg[1]),msg[0]){case"applePayMercahntValidation":case"paymentKey":_this.onStatusUpdate("applePayError")}else switch(msg[0]){case"relayReady":_this.relayMessage("getMerchantCapabilities",JSON.stringify({route:"/api/v2/pub/merchant_capabilities"}));break;case"merchantCapabilities":res.applepay?(_this.onStatusUpdate("applePayPermissionGranted"),_this.applePayPaymentRequest.merchantCapabilities=res.applepay.capabilities,_this.applePayPaymentRequest.supportedNetworks=res.applepay.networks,_this.applePayConfig.merchantId||(_this.applePayConfig.merchantId=res.applepay.merchant_id),resolve("Apple Pay is available.")):(_this.onStatusUpdate("applePayPermissionDenied"),reject("Your merchant account is not set up to use Apple Pay."));break;case"applePayMercahntValidation":_this.onStatusUpdate("applePayMerchantValidated"),applePaySession=_this.applePaySession;var data=JSON.parse(res.payload);applePaySession.completeMerchantValidation(data);break;case"paymentKey":applePaySession=_this.applePaySession,_this.paymentKey=res,applePaySession.completePayment(window.ApplePaySession.STATUS_SUCCESS),_this.onStatusUpdate("applePaySuccess")}}})},ApplePay.prototype.addButton=function(){var _this=this,btnTarget=document.getElementById(this.applePayConfig.targetDiv),applePayBtn=document.createElement("div");applePayBtn.id="payjs-applePayBtn",applePayBtn.setAttribute("class","apple-pay-button apple-pay-button-black"),btnTarget.appendChild(applePayBtn),applePayBtn.addEventListener("click",function(event){_this.createApplePaySession(event)}),document.getElementById("paybox-spinnerContainer").style.display="none";var errorContainer=document.createElement("div");errorContainer.id="payjs-applePayError",btnTarget.appendChild(errorContainer)},ApplePay.prototype.createApplePaySession=function(event){var _this=this;this.applePaySession=new window.ApplePaySession(3,this.applePayPaymentRequest);var applePaySession=this.applePaySession;applePaySession.onvalidatemerchant=function(event){_this.onStatusUpdate("applePaySessionBegin");var payload=JSON.stringify({route:"/api/v2/pub/applepay/validate",url:event.validationURL,display_name:_this.applePayConfig.displayName,domain_name:window.location.hostname,merchant_id:_this.applePayConfig.merchantId});_this.relayMessage("validateApplePayMerchant",payload)},applePaySession.oncancel=function(event){_this.onStatusUpdate("applePaySessionCancel")},applePaySession.onpaymentauthorized=function(event){_this.onStatusUpdate("applePayPaymentAuthorized");var payload={route:"/api/v2/pub/payment_keys",applepay:event.payment.token};_this.relayMessage("getPaymentKey",JSON.stringify(payload))},applePaySession.begin()},ApplePay.prototype.relayMessage=function(title,body){document.getElementById("payjs-applePayRelay").contentWindow.postMessage(title+"::"+body,"*")},ApplePay.prototype.displayError=function(errorMsg){document.getElementById("payjs-applePayError").innerText=errorMsg},ApplePay.prototype.on=function(status,callback){this.callbacks[status]=callback},ApplePay.prototype.onStatusUpdate=function(status){this.callbacks[status]&&this.callbacks[status]()},ApplePay.prototype.getPaymentKey=function(){var _this=this;return new Promise(function(resolve,reject){_this.applePayConfig.extended_response?resolve(_this.paymentKey):resolve(_this.paymentKey.key)})},ApplePay}()}(usaepay||(usaepay={}));